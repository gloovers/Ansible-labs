- name: Create docker containers
  hosts: localhost
  become: yes
  become_user: root
  tags:
    - sanity
  vars:
    user_n: devops
    path_key: "{{ ansible_env['PWD'] }}"
    app_name: app
    app_group_name: appserver
    web_name: web
    web_group_name: webserver
    image: "centos:my"
    label: "test"
  tasks:
    - block:
      - name: check docker containers status
        shell: "docker container inspect {{ item }}"
        with_items:
          - "{{ app_name }}"
          - "{{ web_name }}"
        loop_control:
          label: "{{ item }}"
      - name: Get containers info
        shell: |
          docker ps -q -f name={{ item }} && \
          docker container inspect {{ item }} | jq '.[].NetworkSettings.Networks.bridge.IPAddress' | sed 's/\"//g'
        with_items:
          - "{{ app_name }}"
          - "{{ web_name }}"
        register: containers  
      rescue:
      - name: Start containers
        shell: |
          docker run -d --rm --cap-add=SYS_ADMIN -P -l {{ label }} --name {{ item }} {{ image }} && \
          docker container inspect {{ item }} | jq '.[].NetworkSettings.Networks.bridge.IPAddress' | sed 's/\"//g'
        with_items:
          - "{{ app_name }}"
          - "{{ web_name }}"
        register: containers

    - block:
      - name: localhost envs
        add_host:
          name: localhost
          ansible_connection: local
          ansible_ssh_private_key_file: "{{ path_key }}/{{ user_n }}.pem"
        become: yes
      - name: Dynamical inventory app
        add_host:
          name: "{{ containers.results[0].item }}"
          groups: "{{ app_group_name }}"
          ansible_connection: ssh
          ansible_hostname: "{{ containers.results[0].stdout_lines[0] }}"
          ansible_host: "{{ containers.results[0].stdout_lines[1] }}"
          ansible_user: "{{ user_n }}"
          ansible_ssh_private_key_file: "{{ path_key }}/{{ user_n }}.pem"
        changed_when: false
      - name: Dynamical inventory web
        add_host:
          name: "{{ containers.results[1].item }}"
          groups: "{{ web_group_name }}"
          ansible_connection: ssh
          ansible_hostname: "{{ containers.results[1].stdout_lines[0] }}"
          ansible_host: "{{ containers.results[1].stdout_lines[1] }}"
          ansible_user: "{{ user_n }}"
          ansible_ssh_private_key_file: "{{ path_key }}/{{ user_n }}.pem"
        changed_when: false
      rescue:
      - name: docker stop
        shell: "docker stop {{ item }}"
        with_items:
          - "{{ app_name }}"
          - "{{ web_name }}"

#######################################

- import_playbook: playbooks/create_local_key.yml

- import_playbook: playbooks/create_user_devops.yml

- import_playbook: playbooks/jenkins_inst.yml

- import_playbook: playbooks/httpd_inst.yml 

- import_playbook: playbooks/outline.yml


